<alaqilxml:alaqil name="namespaces" xmlns:alaqilxml="http://jniplusplus.sourceforge.net" xmlns:alaqil="http://alaqil.sourceforge.net" xmlns:c="http://www.ansi.org" >
  <alaqil:top >
    <alaqilxml:child >
      <alaqil:file name="../../Lib/alaqil.swg" >
        <alaqilxml:type string="include"  />
      </alaqil:file>
      <alaqil:file name="example_inl.i" >
        <alaqilxml:child >
          <alaqil:module name="example"  />
          <alaqil:insert >
            <alaqilxml:code >

#include "example.h"
            </alaqilxml:code>
          </alaqil:insert>
          <c:function name="dot_product" >
            <alaqilxml:parms >
              <alaqilxml:parm name="a" >
                <alaqilxml:type string="Vector"  />
              </alaqilxml:parm>
              <alaqilxml:parm name="b" >
                <alaqilxml:type string="Vector"  />
              </alaqilxml:parm>
            </alaqilxml:parms>
            <alaqilxml:storage string="extern"  />
            <alaqilxml:type string="double"  />
          </c:function>
          <c:function name="vector_add" >
            <alaqilxml:parms >
              <alaqilxml:parm name="a" >
                <alaqilxml:type string="Vector"  />
              </alaqilxml:parm>
              <alaqilxml:parm name="b" >
                <alaqilxml:type string="Vector"  />
              </alaqilxml:parm>
            </alaqilxml:parms>
            <alaqilxml:storage string="extern"  />
            <alaqilxml:type string="Vector"  />
          </c:function>
          <c:function name="free" >
            <alaqilxml:parms >
              <alaqilxml:parm >
                <alaqilxml:type string="p.void"  />
              </alaqilxml:parm>
            </alaqilxml:parms>
            <alaqilxml:type string="void"  />
          </c:function>
          <alaqil:insert >
            <alaqilxml:code >


Vector *new_Vector(double x, double y, double z) {
   Vector *v = (Vector *) malloc(sizeof(Vector));
   v->x = x;
   v->y = y;
   v->z = z;
   return v;
}

void vector_print(Vector *v) {
  printf("Vector %x = (%g, %g, %g)\n", v, v->x, v->y, v->z);
}
            </alaqilxml:code>
          </alaqil:insert>
          <c:function name="new_Vector" >
            <alaqilxml:parms >
              <alaqilxml:parm name="x" >
                <alaqilxml:type string="double"  />
              </alaqilxml:parm>
              <alaqilxml:parm name="y" >
                <alaqilxml:type string="double"  />
              </alaqilxml:parm>
              <alaqilxml:parm name="z" >
                <alaqilxml:type string="double"  />
              </alaqilxml:parm>
            </alaqilxml:parms>
            <alaqilxml:code >
{
   Vector *v = (Vector *) malloc(sizeof(Vector));
   v->x = x;
   v->y = y;
   v->z = z;
   return v;
}            </alaqilxml:code>
            <alaqilxml:type string="p.Vector"  />
          </c:function>
          <c:function name="vector_print" >
            <alaqilxml:parms >
              <alaqilxml:parm name="v" >
                <alaqilxml:type string="p.Vector"  />
              </alaqilxml:parm>
            </alaqilxml:parms>
            <alaqilxml:code >
{
  printf("Vector %x = (%g, %g, %g)\n", v, v->x, v->y, v->z);
}            </alaqilxml:code>
            <alaqilxml:type string="void"  />
          </c:function>
        </alaqilxml:child>
        <alaqilxml:type string="include"  />
      </alaqil:file>
    </alaqilxml:child>
  </alaqil:top>
</alaqilxml:alaqil>
